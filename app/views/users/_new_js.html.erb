jQuery(function($) {
	var vc = new view_controller()

	$(window).bind('mousemove', vc.collect)
	sjcl.random.startCollectors()

	$("#new_user").bind('submit', function(event) {
		return vc.place_keys(event)
	})
	$("#entropy").progressbar({
		value : 0
	})
	$("#passphrase-div").hide()
	$("#submission").hide()
	$("#instruction").text("move your mouse to generate entropy")
	$("#create-user").bind('click', function() {
		$("#new_user").submit()
	})
})
function view_controller() {"use strict"

	if(!(this instanceof view_controller))
		throw new Error("Constructor called as a function")

	var vc = this

	this.crypto = new crypto()
	this.keys = {}

	this.collect = function() {
		var progress = sjcl.random.getProgress(10)

		if(progress === undefined || progress == 1) {
			$("#entropy").progressbar({
				value : 100
			})
			sjcl.random.stopCollectors()
			$(window).unbind('mousemove', vc.collect)
			vc.keys = vc.crypto.generate_keys()
			$("#submission").show()
			$("#passphrase-div").show()
			$("#entropy").hide()
			$("#passphrase").focus()
			$("#instruction").text("enter a passphrase")
		} else {
			var percentage = progress * 100;
			$("#entropy").progressbar({
				value : percentage
			})
		}
	}

	this.place_keys = function(event) {
		if(!$("#passphrase").val() || !vc.keys) {
			console.log("passphrase and full entropy are required")
			event.preventDefault()
			return false
		}

		$("#create-user").unbind('click', function() {
			$("#new_user").submit()
		})

		vc.keys = vc.crypto.encrypt_keys($("#passphrase").val(), vc.keys)

		$("#user_encrypted_private_key").val(vc.keys.encryption.sec)
		$("#user_public_key").val(JSON.stringify(vc.keys.encryption.pub))
		$("#user_encrypted_signing_key").val(vc.keys.signing.sec)
		$("#user_verification_key").val(JSON.stringify(vc.keys.signing.pub))

		return true
	}
}

